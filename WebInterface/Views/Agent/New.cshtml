@model Escalator.Common.Models.Agent
@{
    ViewBag.Title = "Create New Agent";

    var roles = new List<string>() {"admin", "manager", "user"};


}

<div style="display: grid; place-items: center;">
    @using (Html.BeginForm())
    {
    <div class="card" style="width: 70em;">
        @Html.ValidationSummary(true)
        <h5 class="card-header">New Agent</h5>

        <div class="card-body" style="text-align: center;">
            <div class="row" style="display: grid; place-items: center; padding-top: 1em;"> 
                @Html.LabelFor(model => model.Username, new { @class = "control-label col-md-2"})
                @Html.EditorFor(model => model.Username, new {htmlAttributes = new {@style = "width:20em;"}})                    
                @Html.ValidationMessageFor(model => model.Username)           
            </div>

            <div class="row" style="display: grid; place-items: center; padding-top: 1em;"> 
                @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2"})
                @Html.EditorFor(model => model.Password, new {htmlAttributes = new {@style = "width:20em;"}})                    
                @Html.ValidationMessageFor(model => model.Password)           
            </div>

            <div class="row" style="display: grid; place-items: center; padding-top: 1em;"> 
                @Html.LabelFor(model => model.NeedsNewPassword,"Reset Password On First Login", new { @class = "control-label col-md-2", @style = "width:20em;"})
                @Html.CheckBoxFor(model => model.NeedsNewPassword)                    
                @Html.ValidationMessageFor(model => model.NeedsNewPassword)           
            </div>

            

            <div class="row" style="display: grid; place-items: center; padding-top: 1em;"> 
                @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2"})
                @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@style = "width:20em;"}})                    
                @Html.ValidationMessageFor(model => model.Email)           
            </div>
            
            <div class="row" style="display: grid; place-items: center; padding-top: 1em;"> 
                @Html.LabelFor(model => model.Role, new { @class = "control-label col-md-2"})
                @Html.DropDownListFor(model => model.Role, new SelectList(roles), new {@style = "width:20em;"})                    
                @Html.ValidationMessageFor(model => model.Role)           
            </div>  

            <div class="row" style="display: grid; place-items: center; padding-top: 1em;"> 
                @Html.LabelFor(model => model.OptInNotifications, new { @class = "control-label col-md-2"})
                @Html.CheckBoxFor(model => model.OptInNotifications, new {@style = "width:20em;"})                    
                @Html.ValidationMessageFor(model => model.OptInNotifications)           
            </div>  
            <div class="row" style="display: grid; place-items: center; padding-top: 1em;"> 
                @Html.LabelFor(model => model.OptInReports, new { @class = "control-label col-md-2"})
                @Html.CheckBoxFor(model => model.OptInReports, new {@style = "width:20em;"})                    
                @Html.ValidationMessageFor(model => model.OptInReports)           
            </div>               
            <div class="row" style="display: grid; place-items: center; padding-top: 1em;"> 
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
          
        </div>
    </div>
    }
</div>

@*@Html.DropDownList("ConstructionType", new SelectList(Model.Construction.Distinct().ToList(), "ConstructionID", "ConstructionType", item.ConstructionID))
@Html.DropDownListFor(m => m.BANK_NAME, new SelectList(Model.BANKS, "ID", "Name"))*@