<h1>Version Alpha 0.2</h1>

<h2>Release Notes</h2>

<h3>Version 0.2</h3>
<h4>Major upgrades to authentication and role based UI</h4>
<ul>
    <li>All functionality is locked to roles.</li>
    <li>Added new role for users. users can only add tickets and view/edit their submissions.</li>
    <li>New documentation was created in the source control.</li>
    <li>The app can now work with either SQL Server OR postgres</li>
    <li>Tickets now have a severity level</li>
    <li>Some business logic has been moved to the API</li>
    <li>The ApiHelper now completes all the work for adding headers to json request</li>
</ul>


<h3>Version 0.1</h3>
<h4>This version includes the basic functions for the program.</h4>
<ul>
    <li>Ticketing system - Allows to create, edit, and delete ticket. </li>
    <li>Authentication - 3 levels of auth. 1. anonymous - can submit new tickets. 2. manager - can edit tickets 3. admin - can add/edit users, jurisdictions, and other top level functions  </li>
    <li>Database - Postgres</li>
    <li>Email system - currently sends email to default agent for selected jurisdiction</li>
</ul>

<h4>Coming Soon:</h4>
<p>To do soon:</p>
<ul>
    <li>Manage Juridictions and delete jurisdictions interface</li>
    <li>Move business logic in processors to api.</li>
    <li>User summary email. </li>
</ul>

<p>Later development:</p>
<ul>
    <li>Switch db service to sql server instead of postgres.</li>
    <li>When IT sets up a internal email, setup that instead of gmail.</li>
    <li>create encryptor for password, so they wont be exposed in AppSettings.</li>
    <li>Admin reporting for Jess "Will it track length of ticket before closure? 
                                 Number of tickets per individual?  
                                 Number of tickets per agency?"</li>
    <li>Route for email links. If auth, go to ticket, if not auth login then redirect to ticket.</li>
</ul>

