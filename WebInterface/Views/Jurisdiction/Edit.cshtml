@model WebInterface.Models.JurisdictionViewModel
@{
    ViewBag.Title = "Edit Jurisdictions";

    var agentList = Model.agents.ToList();
    var agentListWithNone = Model.agents.ToList();
    agentListWithNone.Insert(0, new Escalator.Common.Models.Agent(){Id = 999999999, Username = "none"});

    


}

<div style="display: grid; place-items: center;">
    @using (Html.BeginForm())
    {
    <div class="card" style="width: 70em;">
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.jurisdiction.Id)
        <h5 class="card-header">Edit Jurisdiction</h5>

        <div class="card-body" style="text-align: center;">
            <div class="row" style="display: grid; place-items: center; padding-top: 1em;"> 
                @Html.LabelFor(model => model.jurisdiction.Name, new { @class = "control-label col-md-2"})
                @Html.EditorFor(model => model.jurisdiction.Name)                    
                @Html.ValidationMessageFor(model => model.jurisdiction.Name)           
            </div>
            <div class="row" style="display: grid; place-items: center; padding-top: 1em;"> 
                @Html.LabelFor(model => model.jurisdiction.DefaultAgentId, "Select a default agent.", new { @class = "control-label col-md-2"})
                @Html.DropDownListFor(m => m.jurisdiction.DefaultAgentId, new SelectList(agentList, "Id", "Username"), new {@style = "width:20em;"})                    
                @Html.ValidationMessageFor(model => model.jurisdiction.DefaultAgentId)           
            </div>
            <div class="row" style="display: grid; place-items: center; padding-top: 1em;"> 
                @Html.LabelFor(model => model.jurisdiction.DefaultManagerId, "Select a default manager.", new { @class = "control-label col-md-2"})
                @Html.DropDownListFor(m => m.jurisdiction.DefaultManagerId, new SelectList(agentListWithNone.Where(agent => agent.Role == "manager" || agent.Role == "admin" || agent.Id == 999999999 ), "Id", "Username"), new {@style = "width:20em;"})                    
                @Html.ValidationMessageFor(model => model.jurisdiction.DefaultManagerId)           
            </div>
            <div class="row" style="display: grid; place-items: center; padding-top: 1em;"> 
                @Html.LabelFor(model => model.jurisdiction.SecondaryAgentId, "Select a secondary agent. (not required)", new { @class = "control-label col-md-2"})
                @Html.DropDownListFor(m => m.jurisdiction.SecondaryAgentId, new SelectList(agentListWithNone, "Id", "Username"), new {@style = "width:20em;"})                    
                @Html.ValidationMessageFor(model => model.jurisdiction.SecondaryAgentId)           
            </div>

            <div class="row" style="display: grid; place-items: center; padding-top: 1em;"> 
                @Html.LabelFor(model => model.jurisdiction.TertiaryAgentId, "Select a tertiary agent. (not required)", new { @class = "control-label col-md-2"})
                @Html.DropDownListFor(m => m.jurisdiction.TertiaryAgentId, new SelectList(agentListWithNone, "Id", "Username"), new {@style = "width:20em;"})                    
                @Html.ValidationMessageFor(model => model.jurisdiction.TertiaryAgentId)           
            </div>

            <div class="row" style="display: grid; place-items: center; padding-top: 1em;"> 
                <input type="submit" value="Save" class="btn btn-default" />
            </div>

        </div>
    </div>
    }
    <div class="card" style="width: 20em;">
        <div class="card-body" style="text-align: center;"></div>
            <div class="row" style="display: grid; place-items: center; padding-top: 1em; padding-bottom: 1em;"> 
                <a asp-controller="Jurisdiction" asp-action="Delete" asp-route-id="@Model.jurisdiction.Id" onclick="return confirm('Are you sure you want to delete this jurisdiction')"><button class="btn btn-default">DELETE JURISDICTION</button></a>
            </div>
        </div>
    </div>
</div>

@*@Html.DropDownList("ConstructionType", new SelectList(Model.Construction.Distinct().ToList(), "ConstructionID", "ConstructionType", item.ConstructionID))
@Html.DropDownListFor(m => m.BANK_NAME, new SelectList(Model.BANKS, "ID", "Name"))*@